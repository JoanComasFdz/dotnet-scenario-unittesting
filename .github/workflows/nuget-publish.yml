name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow when a tag matching this pattern is pushed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'  # Set your desired .NET version

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine version
      id: gitversion
      run: dotnet-gitversion /output json /showvariable FullSemVer

    - name: Set prerelease version
      run: echo "::set-output name=version::${{ steps.gitversion.outputs.FullSemVer }}-alpha"

    - name: Set version in .csproj
      run: sed -i 's|<Version>.*</Version>|<Version>${{ steps.version.outputs.version }}</Version>|' JoanComas.ScenarioUnitTesting/JoanComas.ScenarioUnitTesting.csproj

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release --no-restore

    - name: Pack the project
      run: dotnet pack --configuration Release --no-build -o ./artifacts /p:PackageVersion=${{ steps.version.outputs.version }}

    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./artifacts/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

    - name: Create Git tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag ${{ steps.version.outputs.version }}
        git push origin ${{ steps.version.outputs.version }}
